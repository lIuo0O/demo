C51 COMPILER V9.56.0.0   I2C_SLAVE                                                         12/23/2019 11:51:05 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE I2C_SLAVE
OBJECT MODULE PLACED IN .\Objects\i2c_slave.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Src\i2c_slave.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\i2c_slave.lst) TABS(2) OBJECT(.\Objects\i2c_slave.obj)

line level    source

   1          #include "i2c_slave.h"
   2          /***************************************************************************
   3                                    Global Variable
   4          ***************************************************************************/
   5          //RX variable
   6          idata uint8_t g_cI2cRxBuf[MAX_BUF_LEN] = 0; 
   7          uint8_t g_cI2cRxLen = 0;
   8          //TX variable
   9          uint8_t g_cI2cTxBuf[MAX_BUF_LEN] = {1,2,3,4,5};   // for test
  10          uint8_t g_cI2cTxLen = 0;
  11          
  12          uint8_t g_cDataAddr = 0;
  13          /**************************************************************************************
  14          Function: set input pin
  15                    Set slave addr
  16                    Interrupt enable
  17          ***************************************************************************************/
  18          void i2c_slave_init (void)
  19          { 
  20   1        P0M &= 0xE7;
  21   1        P0UR |= 0x18;                               // set  SDA(P04) SCL(P03)  pin's at input mode  
  22   1        
  23   1      //  I2CCON = 0x40;                            // I2C enable (ENS1),Fclk = Fcpu/256
  24   1        I2CCON = 0xC0;                              // I2C enable (ENS1),Fclk = Fcpu/960
  25   1        
  26   1        SMBSEL = 0x05;                              // Select the high byte of Tout Register.
  27   1        SMBDST = TIME_PERIOD >> 8;
  28   1        
  29   1        SMBSEL = 0x04;                              // Select the low byte of Tout Register
  30   1        SMBDST = TIME_PERIOD;                       // 35ms
  31   1        
  32   1        SMBSEL |= 0x80;                             // EnablE SMBus extension function 
  33   1        
  34   1        EI2C = 1;                                   // I2C Interrupt enable
  35   1        EAL = 1;                                    // Interrupt enable  1101 1000
  36   1        
  37   1        I2CADR = I2C_SLAVE_ADDR;                    // init slave addr  
  38   1        I2CCON |= 0x04;                             // AA = 1
  39   1      }
  40          /**************************************************************************************
  41          Function: i2c_slave isr service
  42          ***************************************************************************************/
  43          void isr_i2c_slave (void) interrupt ISRI2c
  44          {
  45   1        switch(I2CSTA)
  46   1        {     
  47   2          //Slave Transmit
  48   2          case I2C_ST_SLA_ACK:
  49   2          {
  50   3            g_cI2cTxLen = 0;
  51   3            I2CDAT = g_cI2cTxBuf[g_cI2cTxLen++];  
  52   3            break;  
  53   3          }     
  54   2          case I2C_ST_DATA_ACK:   
C51 COMPILER V9.56.0.0   I2C_SLAVE                                                         12/23/2019 11:51:05 PAGE 2   

  55   2          {
  56   3            I2CDAT = g_cI2cTxBuf[g_cI2cTxLen++];  
  57   3            break;
  58   3          }
  59   2          
  60   2          //Slave Receive
  61   2          case I2C_SR_SLA_ACK:
  62   2          case I2C_SR_GCALL_ACK:
  63   2          {
  64   3            g_cI2cRxLen = 0;  
  65   3            break;
  66   3          }
  67   2          case I2C_SR_DATA_ACK:
  68   2          case I2C_SR_GCALL_DATA_ACK:
  69   2          {
  70   3            g_cI2cRxBuf[g_cI2cRxLen++] = I2CDAT;
  71   3            break;
  72   3          }
  73   2          
  74   2          default:
  75   2          {
  76   3            g_cI2cRxLen = 0;  
  77   3            g_cI2cTxLen = 0;
  78   3            
  79   3            I2CCON &= 0xCF;                       // Clear STA & STOP     
  80   3            break;    
  81   3          }   
  82   2        }
  83   1        
  84   1        I2CCON |= 0x04;                           // AA = 1 
  85   1        I2CCON &= 0xF7;                           // Clear SI
  86   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    132    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =    103    ----
   IDATA SIZE       =    100    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
