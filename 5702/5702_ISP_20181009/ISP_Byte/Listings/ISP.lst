C51 COMPILER V9.54   ISP                                                                   11/23/2018 11:39:48 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ISP
OBJECT MODULE PLACED IN .\Objects\ISP.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Src\ISP.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\I
                    -SP.lst) TABS(2) OBJECT(.\Objects\ISP.obj)

line level    source

   1          
   2          #include "ISP.h"
   3          #include <intrins.h>                                       // for _nop_
   4          #include <absacc.h>                                        // for CBYTE
   5          
   6          /*ISP²Ù×÷×¢ÒâÊÂÏî£º
   7          1.5702 ISP Ö»Ö§³ÖÒ³Ð´Ä£Ê½,²»Ö§³Ö×Ö½ÚÐ´Ä£Ê½,¼´Ð´Ò»´ÎFlash,Ð´Ò»´ÎFlash²»¹ÜÄãÉèÖÃµÄÊý¾Ý³¤¶ÈÎª¶à´ó,ÏµÍ³Ò»´Î¶¼Ê
             -ÇÐ´32Byte.
   8          2.5702ÄÚÖÃ4KBµÄ³ÌÐò´æ´¢(IROM),¾ù·ÖÎª128Ò³(Ã¿Ò³32Byte),³ÌÐòÖÐµÄÇ°10Ò³Óë×îºóÒ»Ò³²»¿ÉÒÔ½øÐÐISP²Ù×÷,·ñÔò»áµ¼ÖÂ
             -ÉÏµç´íÎó»ò¸´Î»´íÎó.
   9          3.µ±ÄãÐèÒªÐ´10ByteÊý¾Ýµ½FlashÖÐ,ÄÇÃ´ÄÇÃ´¾ÍÐèÒª¶¨Òå10ByteµÄRam,ÇÒRamÖ»ÄÜ¶¨ÒåÔÚidata,²»ÄÜ¶¨ÒåÔÚxdata.
  10          */
  11          
  12          
  13          uint8_t code r_rom_data[32] _at_ L_ISP_ADDR;              //¶¨ÒåIROMµÄÊ×µØÖ·
  14          
  15          
  16          idata uint16_t r_read_rom_addr = L_ISP_ADDR;
  17          idata uint8_t r_isp_write_data[32] = {0};                 //ÐèÐ´FlashµÄÊý¾Ý
  18          idata uint8_t r_isp_read_data1[32] = {0};                 //¶Á³öFlashÖÐµÄÊý¾Ý
  19          idata uint8_t r_isp_read_data2[32] = {0};
  20          
  21          
  22          //====================================================================================================//
  23          //³õÊ¼»¯Ð´ISPÊý¾Ý
  24          //====================================================================================================//
  25          void ISPinit(void)
  26          {
  27   1        uint8_t i = 0;
  28   1        for(i=0;i<32;i++)
  29   1        {
  30   2          r_isp_write_data[i] = i;
  31   2        }
  32   1      }
  33          
  34          //====================================================================================================//
  35          //Ð´ISP
  36          //====================================================================================================//
  37          void ISPpagewrite(uint8_t *r_ram_address)
  38          {
  39   1        WDTR = 0x5a;                              //Çå¹·
  40   1        PERAM = (uint8_t)r_ram_address;           //Êý¾Ý»º´æÆ÷(IRAM)µÄµÚÒ»¸öµØÖ·
  41   1        PEROMH = L_ISP_ADDR >> 8;                 //Ò³±à³Ì(IROM)µÄµÚÒ»¸öµØÖ·(15bit-8bit)
  42   1        PEROML = (L_ISP_ADDR & 0x00f0);           //Ò³±à³Ì(IROM)µÄµÚÒ»¸öµØÖ·(7bit-5bit)
  43   1        PEROML |= 0x0a;                           //¿ªÊ¼ISP²Ù×÷
  44   1        PECMD = 0x5a;                             //¿ªÊ¼ISP²Ù×÷         
  45   1      } 
  46          
  47          //====================================================================================================//
  48          //¶ÁISP  Ö±½Ó¶ÁromÊý×éÃû³Æ
  49          //====================================================================================================//
  50          void ISPpageread1(void)
  51          {
  52   1        uint8_t i= 0;
C51 COMPILER V9.54   ISP                                                                   11/23/2018 11:39:48 PAGE 2   

  53   1        for(i=0;i<32;i++)
  54   1        {
  55   2          r_isp_read_data1[i] =  r_rom_data[i];
  56   2        }
  57   1      }
  58          
  59          
  60          //====================================================================================================//
  61          //¶ÁISP ¶ÁÖ¸romµØÖ·µÄÖµ
  62          //====================================================================================================//
  63          void ISPpageread2(void)
  64          {
  65   1        uint8_t i= 0;
  66   1        for(i=0;i<32;i++)
  67   1        {
  68   2          r_isp_read_data2[i] =CBYTE[r_read_rom_addr++];
  69   2        }
  70   1      }
  71          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     84    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =     98    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
